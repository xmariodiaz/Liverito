# Stage 1: Build the application
FROM node:18-alpine AS builder
WORKDIR /app

# 1. Copy configuration files first (for better layer caching)
COPY package*.json ./
COPY drizzle.config.ts ./
COPY *.config.* ./
COPY tsconfig.json ./

# 2. Install dependencies
RUN npm install --legacy-peer-deps
 
# 3. Copy all source files
COPY . .

# 4. Build with database configuration
ARG DATABASE
ARG GOOGLE_MAPS_API_KEY
RUN DATABASE=$DATABASE npm run drizzle:generate
RUN npm run build

# Stage 2: Production image
FROM node:23-alpine
WORKDIR /app

# 1. Copy only necessary production files
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
COPY --from=builder /app/drizzle ./drizzle
COPY --from=builder /app/package.json ./

# 2. Health check and port configuration
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8080/api/dbtesto || exit 1
EXPOSE 8080

# 3. Runtime command (environment variables injected via GitHub Actions)
CMD ["npm", "start"]